
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	КЧ = Новый КвалификаторыЧисла(10, 2);
	ТаблицаЗадолженностей = Новый ТаблицаЗначений;
	ТаблицаЗадолженностей.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("Строка"));
	ТаблицаЗадолженностей.Колонки.Добавить("СуммаВФайле", Новый ОписаниеТипов("Число",,,КЧ));
	
	ПутьКФайлуНаСервере = ПолучитьИмяВременногоФайла("csv");
	ДанныеФайла = ПолучитьИзВременногоХранилища(АдресДанных);
	ДанныеФайла.Записать(ПутьКФайлуНаСервере);
	
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ПутьКФайлуНаСервере, КодировкаТекста.UTF8);
	
	КоличествоСтрок = Текст.КоличествоСтрок();

	Для НомерСтроки=2 По КоличествоСтрок Цикл
		
		ТекСтрока = Текст.ПолучитьСтроку(НомерСтроки);
		ЧастиСтроки = СтрРазделить(ТекСтрока, ";");
		Контрагент = ЧастиСтроки[0];
		СуммаЗадолженности = Число(ЧастиСтроки[1]);
		
		НоваяСтрока = ТаблицаЗадолженностей.Добавить();
		НоваяСтрока.Контрагент = Контрагент;
		НоваяСтрока.СуммаВФайле = СуммаЗадолженности;
		
	КонецЦикла; 
	
	//0. Отказ от стандартной обработки
	СтандартнаяОбработка = Ложь;
	
	//1. Получение схемы компоновки данных
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	//2. Получение настроек компоновки данных
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	//3. Формирование макета компоновки данных на основании схемы и настроек
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	//4. Выполнение компоновки данных
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаВзаиморасчетов", ТаблицаЗадолженностей);
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	//5. Вывод результата компоновки данных в табличный документ
	ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

КонецПроцедуры
