
&НаКлиенте
Процедура Команда1(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьСвойстваЭлементовФормы();
	
	Если Объект.Ссылка.Пустая() Тогда
		//это новый элемент (ещё не записан в базу)
		Элементы.ОсновнойДоговор.Видимость = Ложь;
	Иначе
		ОсновнойДоговор = ПолучитьОсновнойДоговорКонтрагента(Объект.Ссылка);	
	КонецЕсли; 
	
	//1. создание группы
	ЭлементГруппа = Элементы.Добавить("ГруппаНовыеРеквизиты", Тип("ГруппаФормы"));
	ЭлементГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементГруппа.ОтображатьЗаголовок = Ложь;
	ЭлементГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	
	//2. создание элемента "Страна регистрации" внутри группы
	ЭлементСтрана = Элементы.Добавить("СтранаРегистрации", Тип("ПолеФормы"), ЭлементГруппа);
	ЭлементСтрана.ПутьКДанным = "Объект.СтранаРегистрации";
	ЭлементСтрана.Вид = ВидПоляФормы.ПолеВвода;
	
	//3. создание элемента "КПП" внутри группы
	ЭлементКПП = Элементы.Добавить("КПП", Тип("ПолеФормы"), ЭлементГруппа);
	ЭлементКПП.ПутьКДанным = "Объект.КПП";
	ЭлементКПП.Вид = ВидПоляФормы.ПолеВвода;
	
	//4. перемещение группы в нужное место на форме
	Элементы.Переместить(ЭлементГруппа, ЭтотОбъект, Элементы.ОсновнойДоговор);
	
	//**********************ВЫВОД ПОЛЕЙ КОНТАКТНОЙ ИНФОРМАЦИИ****************
	//1. Заполнение таблицы ОписаниеКонтактнойИнформации
	ГруппаКонтрагенты = Справочники.ВидыКонтактнойИнформации.Справочник_Контрагенты;
	Выборка = Справочники.ВидыКонтактнойИнформации.Выбрать(ГруппаКонтрагенты);
	Пока Выборка.Следующий() Цикл
		
		Идентификатор = Новый УникальныйИдентификатор;
		ИмяРеквизита = "Реквизит_" + СтрЗаменить(Идентификатор, "-", "");
		
		ОписаниеРеквизита = ОписаниеКонтактнойИнформации.Добавить();
		ОписаниеРеквизита.ИмяРеквизита = ИмяРеквизита;
		ОписаниеРеквизита.Тип = Выборка.Тип;
		ОписаниеРеквизита.Вид = Выборка.Ссылка;
		ОписаниеРеквизита.Представление = Выборка.Наименование;
		
	КонецЦикла; 
	
	//2. Создание реквизитов формы для хранения контактной информации
	Реквизиты = Новый Массив;
	ТипСтрока = Новый ОписаниеТипов("Строка");
	Для каждого ОписаниеРеквизита Из ОписаниеКонтактнойИнформации Цикл
		Реквизиты.Добавить(Новый РеквизитФормы(ОписаниеРеквизита.ИмяРеквизита, ТипСтрока));
	КонецЦикла; 
	
	ИзменитьРеквизиты(Реквизиты);
	
	//3. Создание элементов формы + заполнение реквизитов формы (которые созданы программно)
	Для каждого ОписаниеРеквизита Из ОписаниеКонтактнойИнформации Цикл
		
		//создание элемента
		ИмяРеквизита = ОписаниеРеквизита.ИмяРеквизита;
		
		НовыйЭлемент = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Элементы.ГруппаКонтактнаяИнформация);
		НовыйЭлемент.ПутьКДанным = ИмяРеквизита;
		НовыйЭлемент.Заголовок	 = ОписаниеРеквизита.Представление;
		НовыйЭлемент.Вид		 = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.УстановитьДействие("ПриИзменении", "ПриИзмененииКонтактнойИнформации");
		
		//заполнение реквизитов формы
		МассивСтрок = Объект.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Вид", ОписаниеРеквизита.Вид));
		Если МассивСтрок.Количество() > 0 Тогда
			ЭтотОбъект[ИмяРеквизита] = МассивСтрок[0].Значение;
		КонецЕсли; 
		
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииКонтактнойИнформации()
	Модифицированность = Истина;
КонецПроцедуры // ПриИзмененииКонтактнойИнформации()


&НаСервереБезКонтекста
Функция ПолучитьОсновнойДоговорКонтрагента(Контрагент)

	Договор = Справочники.ДоговорыКонтрагентов.НайтиПоРеквизиту("Основной", Истина,,Контрагент);

	Возврат Договор;
	
КонецФункции


&НаКлиенте
Процедура ВидКонтрагентаПриИзменении(Элемент)
	
	ОбновитьСвойстваЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваЭлементовФормы()

	Если Объект.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ФизическоеЛицо Тогда
		Элементы.Наименование.Заголовок = "ФИО";
		Элементы.ИНН.Видимость = Ложь;
	Иначе
		Элементы.Наименование.Заголовок = "Наименование";
		Элементы.ИНН.Видимость = Истина;		
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьПоУНП(Команда)
	
	//проверка на заполненность "УНП"
	Если ПустаяСтрока(Объект.ИНН) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Операция невозможна: не заполнен ИНН!";
		Сообщение.Поле = "Объект.ИНН";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Хост = "www.portal.nalog.gov.by";
	Ресурс = "grp/getData?unp="+СокрЛП(Объект.ИНН);
	
	//создание HTTP-соединения и HTTP-запроса
	Соединение = Новый HTTPСоединение(Хост);
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("host", Хост);
	Запрос = Новый HTTPЗапрос(Ресурс, Заголовки);
	//отправка HTTP-запроса серверу и получение ответа
	Ответ = Неопределено;
	Попытка
		Ответ = Соединение.Получить(Запрос);
	Исключение
		Возврат;
	КонецПопытки;
	//чтение ответа HTTP-сервера
	СведенияXML = Неопределено;
	Попытка
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
		
		СведенияXML = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	Исключение
		Возврат;
	КонецПопытки;
	Если ТипЗнч(СведенияXML) = Тип("ОбъектXDTO") Тогда
		Если СведенияXML.Свойства().Получить("ROW")=Неопределено Тогда
		Иначе
			НаименованиеПолноеПортал = СокрЛП(СведенияXML.ROW.VNAIMP);
			НаименованиеПортал = СокрЛП(СведенияXML.ROW.VNAIMK);
			ЮрАдресПортал = СокрЛП(СведенияXML.ROW.VPADRES);
			Если Лев(ЮрАдресПортал, 2) = ", " Тогда
				ЮрАдресПортал = Прав(ЮрАдресПортал, СтрДлина(ЮрАдресПортал) - 2);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	//проверка реквизитов на изменение, если изменились - задаем вопрос пользователю
	Если НаименованиеПолноеПортал <> Объект.НаименованиеПолное
		ИЛИ НаименованиеПортал <> Объект.Наименование Тогда
		
		ТекстВопроса = "Для УНП "+Объект.ИНН+" в государственном реестре плательщиков соответствует юридическое лицо со следующими реквизитами
		|
		| Наименование: " + НаименованиеПортал + "
		| Полное наименование: " + НаименованиеПолноеПортал + "
		| Юридический адрес: " + ЮрАдресПортал + "
		|
		|Установить данные реквизиты для текущего контрагента?";
		
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Объект.Наименование = НаименованиеПортал;
			Объект.НаименованиеПолное = НаименованиеПолноеПортал;
			
			ВидКИ_ЮрАдрес = ПолучитьВидКонтактнойИнформацииЮрАдрес();
			СтруктураОтбора = Новый Структура("Вид", ВидКИ_ЮрАдрес);
			МассивСтрок = Объект.КонтактнаяИнформация.НайтиСтроки(СтруктураОтбора);
			
			Если МассивСтрок.Количество() = 0 Тогда
				СтрокаКИ = Объект.КонтактнаяИнформация.Добавить();
				СтрокаКИ.Тип = ПолучитьТипКонтактнойИнформацииАдрес();
				СтрокаКИ.Вид = ВидКИ_ЮрАдрес;
				СтрокаКИ.Значение = ЮрАдресПортал;
			Иначе
				МассивСтрок[0].Значение = ЮрАдресПортал;
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипКонтактнойИнформацииАдрес()

	Возврат Перечисления.ТипыКонтактнойИнформации.Адрес;

КонецФункции // ()

&НаСервереБезКонтекста
Функция ПолучитьВидКонтактнойИнформацииЮрАдрес()

	Возврат Справочники.ВидыКонтактнойИнформации.ЮридическийАдресКонтрагента;

КонецФункции // ()


&НаКлиенте
Процедура ПроверитьЗаполнениеНовая(Команда)
	
	ПроверитьЗаполнениеНоваяНаСервере();
	
КонецПроцедуры


&НаСервере
Процедура ПроверитьЗаполнениеНоваяНаСервере()

	//1. Преобразование ДанныеФормыСтруктура -> СправочникОбъект.Контрагенты
	КонтрагентОбъект = РеквизитФормыВЗначение("Объект");
	
	//2. Вызов метода "Записать()" для объекта СправочникОбъект.Контрагенты
	РезультатПроверки = КонтрагентОбъект.ПроверитьЗаполнение();
	
	Если РезультатПроверки = Истина Тогда
		Сообщить("Ошибок не обнаружено!");	
	КонецЕсли; 
	
	//3. Преобразование СправочникОбъект.Контрагенты -> ДанныеФормыСтруктура  
	//ЗначениеВРеквизитФормы(КонтрагентОбъект, "Контрагент");

КонецПроцедуры // ПроверитьЗаполнениеНоваяНаСервере()

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ЭтоНовый", Объект.Ссылка.Пустая());
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.КонтактнаяИнформация.Очистить();
	Для каждого ОписаниеРеквизита Из ОписаниеКонтактнойИнформации Цикл
		СтрокаТЧ = ТекущийОбъект.КонтактнаяИнформация.Добавить();
		СтрокаТЧ.Тип = ОписаниеРеквизита.Тип;
		СтрокаТЧ.Вид = ОписаниеРеквизита.Вид;
		СтрокаТЧ.Значение = ЭтотОбъект[ОписаниеРеквизита.ИмяРеквизита];
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЭтоНовый = Ложь;
	ПараметрыЗаписи.Свойство("ЭтоНовый", ЭтоНовый);
	
	Если ЭтоНовый Тогда
		ЧтоДелатьПослеОтветаНаВопрос = Новый ОписаниеОповещения("ПослеОтветаНаВопросСозданияДоговора", ЭтотОбъект);
		ПоказатьВопрос(ЧтоДелатьПослеОтветаНаВопрос, "Создать договора контрагента?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросСозданияДоговора(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		
		//структура для заполнения данных договора
		ДанныеЗаполнения = Новый Структура("Владелец", Объект.Ссылка);
		
		//структура параметров формы
		СтруктураПараметров = Новый Структура("ЗначенияЗаполнения", ДанныеЗаполнения);
		
		//открытие формы с передачей параметров
		ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаОбъекта", СтруктураПараметров);
		
	КонецЕсли; 

КонецПроцедуры // ПослеОтветаНаВопросСозданияДоговора()

&НаКлиенте
Процедура КонтактнаяИнформацияПриАктивизацииСтроки(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры



 
