
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаДокумента = Товары.Итог("СуммаВсего");
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		// Заполнение шапки
		Договор = ДанныеЗаполнения.Договор;
		Контрагент = ДанныеЗаполнения.Контрагент;
		Организация = ДанныеЗаполнения.Организация;
		Склад = ДанныеЗаполнения.Склад;
		ЗаказКлиента = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		
		//1. Получаем таблицу товаров из заказа
		ТоварыВЗаказе = ДанныеЗаполнения.Товары;
		
		//2. Получаем список товаров из заказа
		МассивНоменклатуры = ТоварыВЗаказе.ВыгрузитьКолонку("Номенклатура");
		
		//3. Получаем остатки резервов (что осталось отгрузить)
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ЗаказКлиента", ЗаказКлиента);
		СтруктураОтбора.Вставить("Организация", Организация);
		СтруктураОтбора.Вставить("Склад", Склад);
		СтруктураОтбора.Вставить("Номенклатура", МассивНоменклатуры);
		
		ТаблицаОстатковРезервов = РегистрыНакопления.ТоварыВРезерве.Остатки(, СтруктураОтбора);
		
		//4. Заполняем табличную часть накладной остатками резервов
		Для каждого СтрокаОстатков Из ТаблицаОстатковРезервов Цикл
			
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Номенклатура = СтрокаОстатков.Номенклатура;
			НоваяСтрока.Количество = СтрокаОстатков.Количество;
			
			//цену, ед. изм. и ставку НДС берем из заказа
			СтрокаЗаказа = ТоварыВЗаказе.Найти(НоваяСтрока.Номенклатура, "Номенклатура");
			Если СтрокаЗаказа <> Неопределено Тогда
				
				НоваяСтрока.ЕдиницаИзмерения = СтрокаЗаказа.ЕдиницаИзмерения;
				НоваяСтрока.СтавкаНДС = СтрокаЗаказа.СтавкаНДС;
				НоваяСтрока.Цена = СтрокаЗаказа.Цена;
				
			КонецЕсли; 
			
			НоваяСтрока.ЗаказКлиента = ЗаказКлиента;
			
			//пересчет сумм в строке
			ОбработкаТабличнхЧастейСервер.РассчитатьСуммыВСтрокеТабличнойЧасти(НоваяСтрока);
			
		КонецЦикла; 
		
		//Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
		//	НоваяСтрока = Товары.Добавить();
		//	НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаТовары.ЕдиницаИзмерения;
		//	НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
		//	НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
		//	НоваяСтрока.СтавкаНДС = ТекСтрокаТовары.СтавкаНДС;
		//	НоваяСтрока.Сумма = ТекСтрокаТовары.Сумма;
		//	НоваяСтрока.СуммаВсего = ТекСтрокаТовары.СуммаВсего;
		//	НоваяСтрока.СуммаНДС = ТекСтрокаТовары.СуммаНДС;
		//	НоваяСтрока.Цена = ТекСтрокаТовары.Цена;
		//	НоваяСтрока.ЗаказКлиента = ЗаказКлиента;
		//КонецЦикла;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Методика = Константы.МетодикаКонтроляОстатковРасходнойНакладной.Получить();
	
	Если Методика = Перечисления.МетодикиКонтроляОстатков.НоваяМетодика Тогда
		ОбработкаПроведения_НоваяМетодика(Отказ, Режим);		
	Иначе
        ОбработкаПроведения_СтараяМетодика(Отказ, Режим);
	КонецЕсли;
	
	//списание себестоимости
	Если НЕ Отказ Тогда
		
		ОтразитьРезервы();
		ОтразитьСписаниеСебестоимости();
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтразитьСписаниеСебестоимости()

	//1. Получение учетной политики
	МетодРасчета = ОбщегоНазначенияСервер.ПолучитьУчетнуюПолитикуОрганизации(Дата, Организация);
	
	Если МетодРасчета = Перечисления.МетодыРасчетаСебестомости.ПоСредней Тогда

		//по средней
		
		//Шаг 1. Получить остатки по регистру "ПартииТоваровНаСкладах"
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяТовары.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяТовары.СуммаВсего) КАК СуммаВсего
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
		|ГДЕ
		|	РасходнаяНакладнаяТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПартииТоваровНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ПартииТоваровНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ПартииТоваровНаСкладахОстатки.СтоимостьОстаток КАК СтоимостьОстаток
		|ПОМЕСТИТЬ ВТ_Остатки
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
		|			&МоментВремени,
		|			(Номенклатура, Склад, Организация) В
		|				(ВЫБРАТЬ
		|					ВТ_Товары.Номенклатура КАК Номенклатура,
		|					&Склад КАК Склад,
		|					&Организация КАК Организация
		|				ИЗ
		|					ВТ_Товары КАК ВТ_Товары)) КАК ПартииТоваровНаСкладахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ВТ_Товары.Количество КАК КоличествоВДокументе,
		|	ЕСТЬNULL(ВТ_Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ВТ_Остатки.СтоимостьОстаток, 0) КАК СтоимостьОстаток,
		|	ВТ_Товары.СуммаВсего КАК СуммаВсего
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
		|		ПО ВТ_Товары.Номенклатура = ВТ_Остатки.Номенклатура";
		
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		//установка явной управляемой блокировки
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПартииТоваровНаСкладах");
		ЭлементБлокировки.УстановитьЗначение("Организация", Организация);
		ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
		ЭлементБлокировки.ИсточникДанных = Товары;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		
		Блокировка.Заблокировать();
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		//2. Сформировать движения в регистре ПартииТоваровНаСкладах
		Движения.ПартииТоваровНаСкладах.Записывать = Истина;
		Движения.Продажи.Записывать = Истина;
		Пока Выборка.Следующий() Цикл
			
			НоваяЗапись = Движения.ПартииТоваровНаСкладах.ДобавитьРасход();
			НоваяЗапись.Период = Дата;                      
			НоваяЗапись.Организация = Организация;
			НоваяЗапись.Склад = Склад;
			НоваяЗапись.Номенклатура = Выборка.Номенклатура;
			НоваяЗапись.Количество = Выборка.КоличествоВДокументе;
			
			//2.1 Расчет стоимости единицы
			Если Выборка.КоличествоОстаток = 0 Тогда
				СебестоимостьЕдиницы = 0;
			Иначе
				СебестоимостьЕдиницы = Выборка.СтоимостьОстаток / Выборка.КоличествоОстаток;
			КонецЕсли;	
			
			//2.2 Расчет стоимости списания			
			НоваяЗапись.Стоимость = Выборка.КоличествоВДокументе * СебестоимостьЕдиницы;
			
			//Продажи
			НоваяЗапись = Движения.Продажи.Добавить();
			НоваяЗапись.Период = Дата;
			НоваяЗапись.Организация = Организация;
			НоваяЗапись.Контрагент = Контрагент;
			НоваяЗапись.Номенклатура = Выборка.Номенклатура;
			НоваяЗапись.Количество = Выборка.КоличествоВДокументе;
			НоваяЗапись.Сумма = Выборка.СуммаВсего;
			НоваяЗапись.Себестоимость = Выборка.КоличествоВДокументе * СебестоимостьЕдиницы;
			
		КонецЦикла;
		
		
	ИначеЕсли МетодРасчета = Перечисления.МетодыРасчетаСебестомости.FIFO Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяТовары.Количество) КАК Количество,
		|	РасходнаяНакладнаяТовары.СуммаВсего КАК СуммаВсего
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
		|ГДЕ
		|	РасходнаяНакладнаяТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяТовары.Номенклатура,
		|	РасходнаяНакладнаяТовары.СуммаВсего
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПартииТоваровНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ПартииТоваровНаСкладахОстатки.Партия КАК Партия,
		|	ПартииТоваровНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ПартииТоваровНаСкладахОстатки.СтоимостьОстаток КАК СтоимостьОстаток
		|ПОМЕСТИТЬ ВТ_ОстаткиПоПартиям
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
		|			&МоментВремени,
		|			(Номенклатура, Склад, Организация) В
		|				(ВЫБРАТЬ
		|					ВТ_Товары.Номенклатура КАК Номенклатура,
		|					&Склад КАК Склад,
		|					&Организация КАК Организация
		|				ИЗ
		|					ВТ_Товары КАК ВТ_Товары)) КАК ПартииТоваровНаСкладахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ВТ_Товары.Количество КАК КоличествоВДокументе,
		|	ЕСТЬNULL(ВТ_ОстаткиПоПартиям.Партия, ЗНАЧЕНИЕ(Документ.ПриходнаяНакладная.ПустаяСсылка)) КАК Партия,
		|	ЕСТЬNULL(ВТ_ОстаткиПоПартиям.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ВТ_ОстаткиПоПартиям.СтоимостьОстаток, 0) КАК СтоимостьОстаток,
		|	ВТ_Товары.СуммаВсего КАК СуммаВсего
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиПоПартиям КАК ВТ_ОстаткиПоПартиям
		|		ПО ВТ_Товары.Номенклатура = ВТ_ОстаткиПоПартиям.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_ОстаткиПоПартиям.Партия.МоментВремени
		|ИТОГИ
		|	МАКСИМУМ(КоличествоВДокументе),
		|	СУММА(КоличествоОстаток),
		|	СУММА(СтоимостьОстаток),
		|	МАКСИМУМ(СуммаВсего)
		|ПО
		|	Номенклатура";
		
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		//установка явной управляемой блокировки
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПартииТоваровНаСкладах");
		ЭлементБлокировки.УстановитьЗначение("Организация", Организация);
		ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
		ЭлементБлокировки.ИсточникДанных = Товары;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		
		Блокировка.Заблокировать();

		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Движения.ПартииТоваровНаСкладах.Записывать = Истина;
		Движения.Продажи.Записывать = Истина;
		Пока ВыборкаНоменклатура.Следующий() Цикл
			// Вставить обработку выборки ВыборкаНоменклатура
			
			ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе;
			
			ВыборкаПартии = ВыборкаНоменклатура.Выбрать();
			
			СебестоимостьВсего = 0;
			Пока ВыборкаПартии.Следующий() И ОсталосьСписать <> 0 Цикл
				
				Если ОсталосьСписать < ВыборкаПартии.КоличествоОстаток Тогда 
					КоличествоСписания = ОсталосьСписать;
				Иначе                                    
					КоличествоСписания = ВыборкаПартии.КоличествоОстаток;	
				КонецЕсли;
				
				Если КоличествоСписания = ВыборкаПартии.КоличествоОстаток Тогда
					Себестоимость = ВыборкаПартии.СтоимостьОстаток;
				Иначе
					Себестоимость = КоличествоСписания / ВыборкаПартии.КоличествоОстаток * ВыборкаПартии.СтоимостьОстаток;	
				КонецЕсли;   

				НоваяЗапись = Движения.ПартииТоваровНаСкладах.ДобавитьРасход();
				НоваяЗапись.Период = Дата;
				НоваяЗапись.Организация = Организация;
				НоваяЗапись.Склад = Склад;
				НоваяЗапись.Номенклатура = ВыборкаПартии.Номенклатура;
				НоваяЗапись.Партия = ВыборкаПартии.Партия;
				НоваяЗапись.Количество = КоличествоСписания;
				НоваяЗапись.Стоимость = Себестоимость;
				
				ОсталосьСписать = ОсталосьСписать - КоличествоСписания;
				
				СебестоимостьВсего = СебестоимостьВсего + Себестоимость;
				
			КонецЦикла;
			
			НоваяЗапись = Движения.Продажи.Добавить();
			НоваяЗапись.Период = Дата;
			НоваяЗапись.Организация = Организация;
			НоваяЗапись.Контрагент = Контрагент;
			НоваяЗапись.Номенклатура = ВыборкаНоменклатура.Номенклатура;
			НоваяЗапись.Количество = ВыборкаНоменклатура.КоличествоВДокументе;
			НоваяЗапись.Сумма = ВыборкаНоменклатура.СуммаВсего;
			НоваяЗапись.Себестоимость = СебестоимостьВсего;
			
		КонецЦикла;
		
	ИначеЕсли МетодРасчета = Перечисления.МетодыРасчетаСебестомости.LIFO Тогда
		
				Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяТовары.Количество) КАК Количество,
		|	РасходнаяНакладнаяТовары.СуммаВсего КАК СуммаВсего
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
		|ГДЕ
		|	РасходнаяНакладнаяТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяТовары.Номенклатура,
		|	РасходнаяНакладнаяТовары.СуммаВсего
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПартииТоваровНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ПартииТоваровНаСкладахОстатки.Партия КАК Партия,
		|	ПартииТоваровНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ПартииТоваровНаСкладахОстатки.СтоимостьОстаток КАК СтоимостьОстаток
		|ПОМЕСТИТЬ ВТ_ОстаткиПоПартиям
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
		|			&МоментВремени,
		|			(Номенклатура, Склад, Организация) В
		|				(ВЫБРАТЬ
		|					ВТ_Товары.Номенклатура КАК Номенклатура,
		|					&Склад КАК Склад,
		|					&Организация КАК Организация
		|				ИЗ
		|					ВТ_Товары КАК ВТ_Товары)) КАК ПартииТоваровНаСкладахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ВТ_Товары.Количество КАК КоличествоВДокументе,
		|	ЕСТЬNULL(ВТ_ОстаткиПоПартиям.Партия, ЗНАЧЕНИЕ(Документ.ПриходнаяНакладная.ПустаяСсылка)) КАК Партия,
		|	ЕСТЬNULL(ВТ_ОстаткиПоПартиям.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ВТ_ОстаткиПоПартиям.СтоимостьОстаток, 0) КАК СтоимостьОстаток,
		|	ВТ_Товары.СуммаВсего КАК СуммаВсего
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиПоПартиям КАК ВТ_ОстаткиПоПартиям
		|		ПО ВТ_Товары.Номенклатура = ВТ_ОстаткиПоПартиям.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_ОстаткиПоПартиям.Партия.МоментВремени УБЫВ
		|ИТОГИ
		|	МАКСИМУМ(КоличествоВДокументе),
		|	СУММА(КоличествоОстаток),
		|	СУММА(СтоимостьОстаток),
		|	МАКСИМУМ(СуммаВсего)
		|ПО
		|	Номенклатура";
		
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		//установка явной управляемой блокировки
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПартииТоваровНаСкладах");
		ЭлементБлокировки.УстановитьЗначение("Организация", Организация);
		ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
		ЭлементБлокировки.ИсточникДанных = Товары;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
		
		Блокировка.Заблокировать();

		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Движения.ПартииТоваровНаСкладах.Записывать = Истина;
		Движения.Продажи.Записывать = Истина;
		Пока ВыборкаНоменклатура.Следующий() Цикл
			// Вставить обработку выборки ВыборкаНоменклатура
			
			ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе;
			
			ВыборкаПартии = ВыборкаНоменклатура.Выбрать();
			
			СебестоимостьВсего = 0;
			Пока ВыборкаПартии.Следующий() И ОсталосьСписать <> 0 Цикл
				
				Если ОсталосьСписать < ВыборкаПартии.КоличествоОстаток Тогда 
					КоличествоСписания = ОсталосьСписать;
				Иначе                                    
					КоличествоСписания = ВыборкаПартии.КоличествоОстаток;	
				КонецЕсли;
				
				Если КоличествоСписания = ВыборкаПартии.КоличествоОстаток Тогда
					Себестоимость = ВыборкаПартии.СтоимостьОстаток;
				Иначе
					Себестоимость = КоличествоСписания / ВыборкаПартии.КоличествоОстаток * ВыборкаПартии.СтоимостьОстаток;	
				КонецЕсли;   

				НоваяЗапись = Движения.ПартииТоваровНаСкладах.ДобавитьРасход();
				НоваяЗапись.Период = Дата;
				НоваяЗапись.Организация = Организация;
				НоваяЗапись.Склад = Склад;
				НоваяЗапись.Номенклатура = ВыборкаПартии.Номенклатура;
				НоваяЗапись.Партия = ВыборкаПартии.Партия;
				НоваяЗапись.Количество = КоличествоСписания;
				НоваяЗапись.Стоимость = Себестоимость;
				
				ОсталосьСписать = ОсталосьСписать - КоличествоСписания;
				
				СебестоимостьВсего = СебестоимостьВсего + Себестоимость;
				
			КонецЦикла;
			
			НоваяЗапись = Движения.Продажи.Добавить();
			НоваяЗапись.Период = Дата;
			НоваяЗапись.Организация = Организация;
			НоваяЗапись.Контрагент = Контрагент;
			НоваяЗапись.Номенклатура = ВыборкаНоменклатура.Номенклатура;
			НоваяЗапись.Количество = ВыборкаНоменклатура.КоличествоВДокументе;
			НоваяЗапись.Сумма = ВыборкаНоменклатура.СуммаВсего;
			НоваяЗапись.Себестоимость = СебестоимостьВсего;
			
		КонецЦикла;
				
	КонецЕсли;

КонецПроцедуры


Процедура ОтразитьРезервы()
		
	// регистр ТоварыВРезерве Расход
	Движения.ТоварыВРезерве.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Если ТекСтрокаТовары.ЗаказКлиента.Пустая() Тогда
			Продолжить;
		КонецЕсли; 
		Движение = Движения.ТоварыВРезерве.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.ЗаказКлиента = ЗаказКлиента;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Склад = Склад;
		Движение.Организация = Организация;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
КонецПроцедуры

Процедура ОбработкаПроведения_НоваяМетодика(Отказ, РежимПроведения)
	
	//1. Получить данные документа
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_ТоварыДокумента
		|ИЗ
		|	Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
		|ГДЕ
		|	РасходнаяНакладнаяТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТоварыДокумента.Номенклатура КАК Номенклатура,
		|	ВТ_ТоварыДокумента.Количество КАК Количество
		|ИЗ
		|	ВТ_ТоварыДокумента КАК ВТ_ТоварыДокумента";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	//2. Записать движения в регистр (списать остатки)
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Склад = Склад;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Количество = Выборка.Количество;
	КонецЦикла;  
	
	Движения.ТоварыНаСкладах.Записать(); 
	
	//3. Прочитать остатки и проверить не ушли ли мы в минус
	Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	-ТоварыНаСкладахОстатки.КоличествоОстаток КАК Дефицит,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТоварыНаСкладахОстатки.Номенклатура) КАК НоменклатураПредставление
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&Период,
		|			(Склад, Организация, Номенклатура) В
		|				(ВЫБРАТЬ
		|					&Склад,
		|					&Организация,
		|					ВТ_ТоварыДокумента.Номенклатура КАК Номенклатура
		|				ИЗ
		|					ВТ_ТоварыДокумента КАК ВТ_ТоварыДокумента)) КАК ТоварыНаСкладахОстатки
		|ГДЕ
		|	ТоварыНаСкладахОстатки.КоличествоОстаток < 0";

	Если РежимПроведения = РежимПроведенияДокумента.Оперативный Тогда
		Период = '00010101';
	Иначе
		Период = Новый Граница(МоментВремени(), ВидГраницы.Включая);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();

	//4. Сообщить об отрицательных остатках
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Отказ = Истина;
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не хватает остатка товара " + Выборка.НоменклатураПредставление + " в количестве " + Выборка.Дефицит + " шт";
			Сообщение.Сообщить();	
		КонецЦикла;
				
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения_СтараяМетодика(Отказ, Режим)

	//1. Очистить старые движения документа
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.ТоварыНаСкладах.Очистить();
	Движения.ТоварыНаСкладах.Записать();
	
	//2. Получение остатков из регистра (на момент времени документа)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_ТоварыДокумента
		|ИЗ
		|	Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
		|ГДЕ
		|	РасходнаяНакладнаяТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ПОМЕСТИТЬ ВТ_Остатки
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&Период,
		|			(Склад, Организация, Номенклатура) В
		|				(ВЫБРАТЬ
		|					&Склад,
		|					&Организация,
		|					ВТ_ТоварыДокумента.Номенклатура КАК Номенклатура
		|				ИЗ
		|					ВТ_ТоварыДокумента КАК ВТ_ТоварыДокумента)) КАК ТоварыНаСкладахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТоварыДокумента.Номенклатура КАК Номенклатура,
		|	ВТ_ТоварыДокумента.Количество КАК КоличествоДокумент,
		|	ЕСТЬNULL(ВТ_Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВТ_ТоварыДокумента.Номенклатура) КАК НоменклатураПредставление
		|ИЗ
		|	ВТ_ТоварыДокумента КАК ВТ_ТоварыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
		|		ПО ВТ_ТоварыДокумента.Номенклатура = ВТ_Остатки.Номенклатура";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", МоментВремени());
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	//Установка явной управляемой блокировки
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.УстановитьЗначение("Организация", Организация);
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	//3. Проверка остатков
	Пока Выборка.Следующий() Цикл

		Если Выборка.КоличествоДокумент > Выборка.КоличествоОстаток Тогда
			Отказ = Истина;
			Дефицит = Выборка.КоличествоДокумент - Выборка.КоличествоОстаток;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Недостаточно товара " + Выборка.НоменклатураПредставление + " в количестве " + Дефицит + " шт";
			Сообщение.Сообщить();	
		КонецЕсли;
		
	КонецЦикла;
	
	//формирование движений, только если контроль остатков пройден
	Если Отказ = Ложь Тогда
		
		// регистр ТоварыНаСкладах Расход
		Движения.ТоварыНаСкладах.Записывать = Истина;
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			Движение = Движения.ТоварыНаСкладах.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Склад = Склад;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.Количество = ТекСтрокаТовары.Количество;
		КонецЦикла;
		
	КонецЕсли;
	
	Движения.ТоварыНаСкладах.Записывать = Истина;


КонецПроцедуры
