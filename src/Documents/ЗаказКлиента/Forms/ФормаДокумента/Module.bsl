
&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	//1. получить данные текущей строки
	ДанныеСтроки = Элементы.Товары.ТекущиеДанные;
	
	//2. Получение ставки НДС и ед. изм. для текущей номенклатуры
	ИменаРеквизитов = "ЕдиницаИзмерения,СтавкаНДС";
	РеквизитыНоменклатуры = ОбщегоНазначенияВызовСервера.ПолучитьРеквизитыНоменклатуры(ДанныеСтроки.Номенклатура, ИменаРеквизитов);
	
	//3. заполнение данных в строке
	Если РеквизитыНоменклатуры = Неопределено Тогда
		ДанныеСтроки.ЕдиницаИзмерения = Неопределено;
		ДанныеСтроки.СтавкаНДС = Неопределено;
	Иначе
		ДанныеСтроки.ЕдиницаИзмерения = РеквизитыНоменклатуры.ЕдиницаИзмерения;
		ДанныеСтроки.СтавкаНДС = РеквизитыНоменклатуры.СтавкаНДС;
	КонецЕсли; 
	
	//4. заполнение цены товара
	ДанныеСтроки.Цена = ПолучитьЦенуНоменклатуры(Объект.Дата, ДанныеСтроки.Номенклатура, Объект.ВидЦен);
	
	//4.1. пересчет сумм в строке
	ОбработкаТабличныхЧастейКлиент.РассчитатьСуммыВСтрокеТабличнойЧасти(ДанныеСтроки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЦенуНоменклатуры(Дата, Номенклатура, ВидЦен)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&Дата,
		|			Номенклатура = &Номенклатура
		|				И ВидЦен = &ВидЦен) КАК ЦеныНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("ВидЦен", ВидЦен);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий();
		
		Цена = Выборка.Цена;
		
	Иначе
		Цена = 0;
	КонецЕсли; 
	
	Возврат Цена;

КонецФункции // ПолучитьЦенуНоменклатуры()


&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	//1. получить данные текущей строки
	ДанныеСтроки = Элементы.Товары.ТекущиеДанные;
	
	//2. рассчитать суммы
	ОбработкаТабличныхЧастейКлиент.РассчитатьСуммыВСтрокеТабличнойЧасти(ДанныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	//1. получить данные текущей строки
	ДанныеСтроки = Элементы.Товары.ТекущиеДанные;
	
	//2. рассчитать суммы
	ОбработкаТабличныхЧастейКлиент.РассчитатьСуммыВСтрокеТабличнойЧасти(ДанныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСтавкаНДСПриИзменении(Элемент)
	
	//1. получить данные текущей строки
	ДанныеСтроки = Элементы.Товары.ТекущиеДанные;
	
	//2. рассчитать суммы
	ОбработкаТабличныхЧастейКлиент.РассчитатьСуммыВСтрокеТабличнойЧасти(ДанныеСтроки);
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьРезервПоОстаткамНаСервере()
	
	МассивТоваров = Новый Массив;
	Для каждого СтрокаТЧ Из Объект.Товары Цикл
		МассивТоваров.Добавить(СтрокаТЧ.Номенклатура);
	КонецЦикла; 
	
	//1. получить остатки общие
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Объект.Организация);
	СтруктураОтбора.Вставить("Склад", Объект.Склад);
	СтруктураОтбора.Вставить("Номенклатура", МассивТоваров);
	
	ТаблицаОстатков = РегистрыНакопления.ТоварыНаСкладах.Остатки(Объект.Дата, СтруктураОтбора);
	
	//2. получить резервы
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Объект.Организация);
	СтруктураОтбора.Вставить("Склад", Объект.Склад);
	СтруктураОтбора.Вставить("Номенклатура", МассивТоваров);
	
	ТаблицаРезервы = РегистрыНакопления.ТоварыВРезерве.Остатки(Объект.Дата, СтруктураОтбора, "Организация, Склад, Номенклатура");
	
	//3. заполнить "Резерв" в табличной части
	Для каждого СтрокаТЧ Из Объект.Товары Цикл
		
		ТекНоменклатура = СтрокаТЧ.Номенклатура;
		СтрокаОстатки = ТаблицаОстатков.Найти(ТекНоменклатура, "Номенклатура");
		СтрокаРезервы = ТаблицаРезервы.Найти(ТекНоменклатура, "Номенклатура");
		
		ОбщийОстаток = 0;
		КоличествоВРезерве = 0;
		
		Если СтрокаОстатки <> Неопределено Тогда
			
			ОбщийОстаток = СтрокаОстатки.Количество;
			
			Если СтрокаРезервы <> Неопределено Тогда
				КоличествоВРезерве = СтрокаРезервы.Количество;
			КонецЕсли; 
		
		КонецЕсли; 
		
		СвободныйОстаток = ОбщийОстаток - КоличествоВРезерве;
		
		Если СтрокаТЧ.Количество > СвободныйОстаток Тогда
			//заказано больше чем доступно к резервированию
			СтрокаТЧ.Резерв = СвободныйОстаток;
		Иначе
			//заказано меньше чем доступно к резервированию
			СтрокаТЧ.Резерв = СтрокаТЧ.Количество;
		КонецЕсли; 
		
		//СтрокаТЧ.Резерв = Мин(СтрокаТЧ.Количество, СвободныйОстаток);
		
	КонецЦикла; 
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьРезервПоОстаткам(Команда)
	ЗаполнитьРезервПоОстаткамНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ИтогПоСумме(Команда)
	
	//вариант № 1
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Итоговая сумма: " + Объект.Товары.Итог("СуммаВсего");
	Сообщение.Сообщить();
	
	//вариант № 2
	СуммаВсего = 0;
	Для каждого СтрокаТЧ Из Объект.Товары Цикл
		СуммаВсего = СтрокаТЧ.СуммаВсего;
	КонецЦикла; 
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Итоговая сумма: " + СуммаВсего;
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПриИзмененииКонтрагента();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	
	ВидЦенДоИзменения = Объект.ВидЦен;
	
	ПриИзмененииДоговораКонтрагента();
	
	Если ВидЦенДоИзменения <> Объект.ВидЦен Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаНаВопросОбИзмененииВидаЦен", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Изменился вид цен. Пересчитать цены в табличной части?", РежимДиалогаВопрос.ДаНет);	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросОбИзмененииВидаЦен(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПерезаполнитьЦеныВТабличнойЧасти();	
	КонецЕсли; 
	
КонецПроцедуры // ПослеОтветаНаВопросОбИзмененииВидаЦен()

&НаСервере
Процедура ПерезаполнитьЦеныВТабличнойЧасти()
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		|ПОМЕСТИТЬ ВТ_Цены
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&Дата,
		|			ВидЦен = &ВидЦен
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТ_Товары.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТ_Товары КАК ВТ_Товары)) КАК ЦеныНоменклатурыСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(ВТ_Цены.Цена, 0) КАК Цена
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены КАК ВТ_Цены
		|		ПО ВТ_Товары.Номенклатура = ВТ_Цены.Номенклатура";
	
	Запрос.УстановитьПараметр("ВидЦен", Объект.ВидЦен);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураОтбора = Новый Структура("НомерСтроки", Выборка.НомерСтроки);
		МассивСтрок = Объект.Товары.НайтиСтроки(СтруктураОтбора);                                          
		МассивСтрок[0].Цена = Выборка.Цена;
		ОбработкаТабличнхЧастейСервер.РассчитатьСуммыВСтрокеТабличнойЧасти(МассивСтрок[0]);
		
	КонецЦикла;

КонецПроцедуры // ПерезаполнитьЦеныВТабличнойЧасти()


&НаСервере
Процедура ПриИзмененииКонтрагента()

	//1. заполнение договора
	Объект.Договор = Справочники.Контрагенты.ПолучитьОсновнойДоговорКонтрагента(Объект.Контрагент);
	
	//2. заполнение вида цен
	ПриИзмененииДоговораКонтрагента();
	
КонецПроцедуры 

&НаСервере
Процедура ПриИзмененииДоговораКонтрагента()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.ВидЦен КАК ВидЦен
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий();		
		
		Если НЕ Выборка.ВидЦен.Пустая() Тогда
			Объект.ВидЦен = Выборка.ВидЦен;
		КонецЕсли; 
		
	КонецЕсли;

КонецПроцедуры // ()

&НаКлиенте
Процедура ЗаполнитьИзФайла(Команда)
	
	Проводник = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Проводник.Фильтр = "Текстовый документ | *.txt";
	
	ЧтоДелатьПослеВыбораФайла = Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтотОбъект);
	Проводник.Показать(ЧтоДелатьПослеВыбораФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ПутьКФайлу = ВыбранныеФайлы[0];
	
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ПутьКФайлу, КодировкаТекста.UTF8); 
	
	СодержимоеФайла = Текст.ПолучитьТекст();
	
	ОбработатьСодержимоеФайлаНаСервере(СодержимоеФайла);
		
КонецПроцедуры // ПослеВыбораФайла()

&НаСервере
Процедура ОбработатьСодержимоеФайлаНаСервере(СодержимоеФайла)

	Объект.Товары.Очистить();
	
	КоличествоСтрок = СтрЧислоСтрок(СодержимоеФайла);
	
	КвалификаторыСтроки = Новый КвалификаторыСтроки(150);
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	ТаблицаДанных.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка",,КвалификаторыСтроки));
	ТаблицаДанных.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));
	
	Для НомерСтроки=1 По КоличествоСтрок Цикл
		
		ТекСтрока = СтрПолучитьСтроку(СодержимоеФайла, НомерСтроки);
		ЧастиСтроки = СтрРазделить(ТекСтрока, ";");
		Наименование = ЧастиСтроки[0];
		Количество = ЧастиСтроки[1];
		Цена = ЧастиСтроки[2];

		
		СтрокаТаблицы = ТаблицаДанных.Добавить();
		СтрокаТаблицы.Наименование = Наименование;
		СтрокаТаблицы.Количество = Количество;
		СтрокаТаблицы.Цена = Цена;
		
	КонецЦикла;
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеФайла.Наименование КАК Наименование,
		|	ДанныеФайла.Количество КАК Количество,
		|	ДанныеФайла.Цена КАК Цена
		|ПОМЕСТИТЬ ВТ_ДанныеФайла
		|ИЗ
		|	&ДанныеФайла КАК ДанныеФайла
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеФайла.Наименование КАК Наименование,
		|	ВТ_ДанныеФайла.Количество КАК Количество,
		|	ВТ_ДанныеФайла.Цена КАК Цена,
		|	Номенклатура.Ссылка КАК Ссылка
		|ИЗ
		|	ВТ_ДанныеФайла КАК ВТ_ДанныеФайла
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО ВТ_ДанныеФайла.Наименование = Номенклатура.Наименование";
	
	Запрос.УстановитьПараметр("ДанныеФайла", ТаблицаДанных);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		//1. добавление строки в ТЧ
		НоваяСтрока = Объект.Товары.Добавить();
		НоваяСтрока.Номенклатура = Выборка.Ссылка;
		НоваяСтрока.Количество = Выборка.Количество;
		НоваяСтрока.Цена = Выборка.Цена;
		
		//2. заполнение ставки НДС и ед. изм
		ИменаРеквизитов = "ЕдиницаИзмерения,СтавкаНДС";
		РеквизитыНоменклатуры = ОбщегоНазначенияВызовСервера.ПолучитьРеквизитыНоменклатуры(НоваяСтрока.Номенклатура, ИменаРеквизитов);
		
		Если РеквизитыНоменклатуры <> Неопределено Тогда
			НоваяСтрока.ЕдиницаИзмерения = РеквизитыНоменклатуры.ЕдиницаИзмерения;
			НоваяСтрока.СтавкаНДС = РеквизитыНоменклатуры.СтавкаНДС;
		КонецЕсли; 
		
		//3. пересчет сумм в строке
		ОбработкаТабличнхЧастейСервер.РассчитатьСуммыВСтрокеТабличнойЧасти(НоваяСтрока);
		
	КонецЦикла;
	

КонецПроцедуры // ОбработатьСодержимоеФайлаНаСервере()


&НаСервереБезКонтекста
Функция НайтиНоменклатуруПоНаименованию(Наименование)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий();
		
		Номенклатура = Выборка.Ссылка;
	Иначе
		Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
	КонецЕсли; 
	
	Возврат Номенклатура;

КонецФункции // ()


