Процедура ПечатьАктаВыполненныхРабот(МассивДокументов, ТабДок, ВыводитьПечать=Ложь) Экспорт 
	
	//1. Получить макет печатной формы   
	Макет = ПолучитьМакет("ПФ_Шаблон_АктВыполненныхРабот");
	
	//2. Получить данные документа   
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АктВыполненныхРабот.Номер КАК Номер,
	|	АктВыполненныхРабот.Дата КАК Дата,
	|	АктВыполненныхРабот.Организация КАК Организация,
	|	АктВыполненныхРабот.Контрагент КАК Контрагент,
	|	АктВыполненныхРабот.Организация.Руководитель КАК Руководитель,
	|	АктВыполненныхРабот.Услуги.(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Цена КАК Цена,
	|		СтавкаНДС КАК СтавкаНДС,
	|		Сумма КАК Сумма,
	|		СуммаНДС КАК СуммаНДС,
	|		СуммаВсего КАК СуммаВсего
	|	) КАК Услуги,
	|	АктВыполненныхРабот.ЗаказКлиента КАК ЗаказКлиента,
	|	АктВыполненныхРабот.Организация.Руководитель.Должность КАК ДолжностьРуководителя,
	|	АктВыполненныхРабот.Организация.ИНН КАК ОрганизацияИНН,
	|	АктВыполненныхРабот.Контрагент.ИНН КАК КонтрагентИНН,
	|	ЕСТЬNULL(ОрганизацииКонтактнаяИнформация.Значение, """") КАК ОрганизацияЮрАдрес,
	|	ЕСТЬNULL(КонтрагентыКонтактнаяИнформация.Значение, """") КАК КонтрагентЮрАдрес,
	|	АктВыполненныхРабот.Организация.Печать КАК ПечатьОрганизации,
	|	ЕСТЬNULL(АктВыполненныхРабот.Организация.Руководитель.Подпись, НЕОПРЕДЕЛЕНО) КАК ПодписьРуководителя
	|ИЗ
	|	Документ.АктВыполненныхРабот КАК АктВыполненныхРабот
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|		ПО АктВыполненныхРабот.Организация = ОрганизацииКонтактнаяИнформация.Ссылка
	|			И (ОрганизацииКонтактнаяИнформация.Вид = &ВидКИ_ОрганизацияЮрАдрес)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	|		ПО АктВыполненныхРабот.Контрагент = КонтрагентыКонтактнаяИнформация.Ссылка
	|			И (КонтрагентыКонтактнаяИнформация.Вид = &ВидКИ_КонтрагентЮрАдрес)
	|ГДЕ
	|	АктВыполненныхРабот.Ссылка В(&МассивДокументов)";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("ВидКИ_ОрганизацияЮрАдрес", Справочники.ВидыКонтактнойИнформации.ЮридическийАдресОрганизации); 
	Запрос.УстановитьПараметр("ВидКИ_КонтрагентЮрАдрес", Справочники.ВидыКонтактнойИнформации.ЮридическийАдресКонтрагента);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(); 
	
	//3. Заполнить табличный документ, используя области из макета
	ПервыйДокумент = Истина;
	
	Пока Выборка.Следующий() Цикл 
		
		Если ПервыйДокумент Тогда
		    ПервыйДокумент = Ложь;
		Иначе
		    ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		//3.1. Заполнить область "Шапка"
		
		//3.1.1. Получить область "Шапка" из макета
		Область = Макет.ПолучитьОбласть("Шапка");    
		
		ПредставлениеОрганизации = СтрШаблон("%1, ИНН %2, %3", 
				Выборка.Организация, Выборка.ОрганизацияИНН, Выборка.ОрганизацияЮрАдрес);
		ПредствлениеКонтрагента = СтрШаблон("%1, ИНН %2, %3", 
				Выборка.Контрагент, Выборка.КонтрагентИНН, Выборка.КонтрагентЮрАдрес);
		
		// Вычислить представление номера без лидирующих нулей 
		ПредставлениеНомера = УдалитьЛидирующиеНулиУНомера(Выборка.Номер);
		
		СтруктураШапки = Новый Структура("ПредставлениеОрганизации, ПредставлениеКонтрагента, ПредставлениеНомера", 
				ПредставлениеОрганизации, ПредствлениеКонтрагента, ПредставлениеНомера);
		
		// Заполнить область данными из выборки и структуры	
		Область.Параметры.Заполнить(Выборка);  
		Область.Параметры.Заполнить(СтруктураШапки);
		
		// Вывести область в табличный документ
		ТабДок.Вывести(Область);  
		
		//3.2. Получить и заполнить область "Шапка Таблицы"
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДок.Вывести(Область); 
		
		СтруктураИтогов = Новый Структура("
		|		ИтогСумма, ИтогСуммаНДС, ИтогСуммаВсего, Количество, 
		|		ИтогСуммаНДСПрописью, ИтогСуммаВсегоПрописью", 
				0, 0, 0, 0);
		
		//3.3 Обойти табличную часть документа в цикле и заполнить таблицу в макете
		ВыборкаУслуги = Выборка.Услуги.Выбрать();
		Пока ВыборкаУслуги.Следующий() Цикл 
			
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
			Область.Параметры.Заполнить(ВыборкаУслуги);
			ТабДок.Вывести(Область); 
			
			СтруктураИтогов.ИтогСумма = СтруктураИтогов.ИтогСумма + ВыборкаУслуги.Сумма;
			СтруктураИтогов.ИтогСуммаНДС = СтруктураИтогов.ИтогСуммаНДС + ВыборкаУслуги.СуммаНДС;
			СтруктураИтогов.ИтогСуммаВсего = СтруктураИтогов.ИтогСуммаВсего + ВыборкаУслуги.СуммаВсего;
			СтруктураИтогов.Количество = СтруктураИтогов.Количество + 1;
			
		КонецЦикла;
		
		//3.4. Получить область "Подвал", заполнить её данными и вывести её
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.Заполнить(Выборка); 
		
		СтруктураИтогов.ИтогСуммаНДСПрописью = ЧислоПрописью(СтруктураИтогов.ИтогСуммаНДС,, 
				"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");   
		
		СтруктураИтогов.ИтогСуммаВсегоПрописью = ЧислоПрописью(СтруктураИтогов.ИтогСуммаВсего,,
				"рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2"); 
		
		Область.Параметры.Заполнить(СтруктураИтогов);
		ТабДок.Вывести(Область);   
		
		//3.5. Вывести область с подписями. Либо "Подписи", либо "ПодписиФаксимиле"
		МассивФИО= СтрРазделить(Выборка.Руководитель, " ");
		
		Если МассивФИО.Количество() >= 3 Тогда
			ФамилияСИнициалами = СтрШаблон("%1 %2. %3.", МассивФИО[0], Лев(МассивФИО[1], 1), Лев(МассивФИО[2], 1));
		ИначеЕсли МассивФИО.Количество() = 2 Тогда 
			ФамилияСИнициалами = СтрШаблон("%1 %2.", МассивФИО[0], Лев(МассивФИО[1], 1));
		ИначеЕсли МассивФИО.Количество() = 1 Тогда
			ФамилияСИнициалами = СтрШаблон("%1", МассивФИО[0]);
		Иначе 
			ФамилияСИнициалами = "";
		КонецЕсли;
		
		ПредставлениеРуководителя = СтрШаблон("%1 %2", Выборка.ДолжностьРуководителя, ФамилияСИнициалами);
		
		СтруктураПодписей = Новый Структура("ПредставлениеРуководителя", ПредставлениеРуководителя);  
		
		Если ВыводитьПечать Тогда
			
			БезЛинии = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
			
			Область = Макет.ПолучитьОбласть("ПодписиФаксимиле");

			ХранилищеПодписи = Выборка.ПодписьРуководителя;
			Если ХранилищеПодписи <> Неопределено Тогда  
				
				ДвоичныеДанныеПодписи = ХранилищеПодписи.Получить(); 
			
				Если ДвоичныеДанныеПодписи <> Неопределено Тогда
					Область.Рисунки.ПодписьРуководителя.Картинка = Новый Картинка(ДвоичныеДанныеПодписи);
					Область.Рисунки.ПодписьРуководителя.Линия = БезЛинии;
				КонецЕсли;
			
			КонецЕсли;
			
			ХранилищеПечати = Выборка.ПечатьОрганизации;
			ДвоичныеДанныеПечати = ХранилищеПечати.Получить();
			
			Если ДвоичныеДанныеПечати <> Неопределено Тогда
				Область.Рисунки.ПечатьОрганизации.Картинка = Новый Картинка(ДвоичныеДанныеПечати);   
				Область.Рисунки.ПечатьОрганизации.Линия = БезЛинии;
			КонецЕсли;  
			
		Иначе 
			Область = Макет.ПолучитьОбласть("Подписи");
		КонецЕсли;
		
		Область.Параметры.Заполнить(СтруктураПодписей);
		
		ТабДок.Вывести(Область);
		
	КонецЦикла;
	
КонецПроцедуры // ОбработкаКомандыНаСервере()

Функция УдалитьЛидирующиеНулиУНомера(Номер)
	
	ПредставлениеНомера = Номер;
	
	Пока Лев(ПредставлениеНомера, 1) = "0" Цикл
		ПредставлениеНомера = Прав(ПредставлениеНомера, СтрДлина(ПредставлениеНомера) - 1);
	КонецЦикла; 
	
	Возврат ПредставлениеНомера;

КонецФункции // УдалитьЛидирующиеНулиУНомера() 
