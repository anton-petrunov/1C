
&НаКлиенте
Процедура УслугиНоменклатураПриИзменении(Элемент)
	
	//1. получить данные текущей строки
	ДанныеСтроки = Элементы.Услуги.ТекущиеДанные;
	
	//2. Получение ставки НДС и ед. изм. для текущей номенклатуры
	ИменаРеквизитов = "ЕдиницаИзмерения,СтавкаНДС";
	РеквизитыНоменклатуры = ОбщегоНазначенияВызовСервера.ПолучитьРеквизитыНоменклатуры(ДанныеСтроки.Номенклатура, ИменаРеквизитов);
	
	//3. заполнение данных в строке
	Если РеквизитыНоменклатуры = Неопределено Тогда
		ДанныеСтроки.ЕдиницаИзмерения = Неопределено;
		ДанныеСтроки.СтавкаНДС = Неопределено;
	Иначе
		ДанныеСтроки.ЕдиницаИзмерения = РеквизитыНоменклатуры.ЕдиницаИзмерения;
		ДанныеСтроки.СтавкаНДС = РеквизитыНоменклатуры.СтавкаНДС;
	КонецЕсли; 
	
	//4. заполнение цены товара
	ДанныеСтроки.Цена = ПолучитьЦенуНоменклатуры(Объект.Дата, ДанныеСтроки.Номенклатура, Объект.ВидЦен);
	
	//4.1. пересчет сумм в строке
	ОбработкаТабличныхЧастейКлиент.РассчитатьСуммыВСтрокеТабличнойЧасти(ДанныеСтроки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЦенуНоменклатуры(Дата, Номенклатура, ВидЦен)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&Дата,
		|			Номенклатура = &Номенклатура
		|				И ВидЦен = &ВидЦен) КАК ЦеныНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("ВидЦен", ВидЦен);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий();
		
		Цена = Выборка.Цена;
		
	Иначе
		Цена = 0;
	КонецЕсли; 
	
	Возврат Цена;

КонецФункции // ПолучитьЦенуНоменклатуры()


&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	//1. получить данные текущей строки
	ДанныеСтроки = Элементы.Услуги.ТекущиеДанные;
	
	//2. рассчитать суммы
	ОбработкаТабличныхЧастейКлиент.РассчитатьСуммыВСтрокеТабличнойЧасти(ДанныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	//1. получить данные текущей строки
	ДанныеСтроки = Элементы.Услуги.ТекущиеДанные;
	
	//2. рассчитать суммы
	ОбработкаТабличныхЧастейКлиент.РассчитатьСуммыВСтрокеТабличнойЧасти(ДанныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСтавкаНДСПриИзменении(Элемент)
	
	//1. получить данные текущей строки
	ДанныеСтроки = Элементы.Услуги.ТекущиеДанные;
	
	//2. рассчитать суммы
	ОбработкаТабличныхЧастейКлиент.РассчитатьСуммыВСтрокеТабличнойЧасти(ДанныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПриИзмененииКонтрагента();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	
	ВидЦенДоИзменения = Объект.ВидЦен;
	
	ПриИзмененииДоговораКонтрагента();
	
	Если ВидЦенДоИзменения <> Объект.ВидЦен Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаНаВопросОбИзмененииВидаЦен", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Изменился вид цен. Пересчитать цены в табличной части?", РежимДиалогаВопрос.ДаНет);	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросОбИзмененииВидаЦен(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПерезаполнитьЦеныВТабличнойЧасти();	
	КонецЕсли; 
	
КонецПроцедуры // ПослеОтветаНаВопросОбИзмененииВидаЦен()

&НаСервере
Процедура ПерезаполнитьЦеныВТабличнойЧасти()
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Услуги.НомерСтроки КАК НомерСтроки,
		|	Услуги.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_Услуги
		|ИЗ
		|	&Услуги КАК Услуги
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		|ПОМЕСТИТЬ ВТ_Цены
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&Дата,
		|			ВидЦен = &ВидЦен
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТ_Услуги.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТ_Услуги КАК ВТ_Услуги)) КАК ЦеныНоменклатурыСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Услуги.НомерСтроки КАК НомерСтроки,
		|	ВТ_Услуги.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(ВТ_Цены.Цена, 0) КАК Цена
		|ИЗ
		|	ВТ_Услуги КАК ВТ_Услуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены КАК ВТ_Цены
		|		ПО ВТ_Услуги.Номенклатура = ВТ_Цены.Номенклатура";
	
	Запрос.УстановитьПараметр("ВидЦен", Объект.ВидЦен);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Услуги", Объект.Услуги.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураОтбора = Новый Структура("НомерСтроки", Выборка.НомерСтроки);
		МассивСтрок = Объект.Услуги.НайтиСтроки(СтруктураОтбора);                                          
		МассивСтрок[0].Цена = Выборка.Цена;
		ОбработкаТабличнхЧастейСервер.РассчитатьСуммыВСтрокеТабличнойЧасти(МассивСтрок[0]);
		
	КонецЦикла;

КонецПроцедуры // ПерезаполнитьЦеныВТабличнойЧасти()


&НаСервере
Процедура ПриИзмененииКонтрагента()

	//1. заполнение договора
	Объект.Договор = Справочники.Контрагенты.ПолучитьОсновнойДоговорКонтрагента(Объект.Контрагент);
	
	//2. заполнение вида цен
	ПриИзмененииДоговораКонтрагента();
	
КонецПроцедуры 

&НаСервере
Процедура ПриИзмененииДоговораКонтрагента()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.ВидЦен КАК ВидЦен
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий();		
		
		Если НЕ Выборка.ВидЦен.Пустая() Тогда
			Объект.ВидЦен = Выборка.ВидЦен;
		КонецЕсли; 
		
	КонецЕсли;

КонецПроцедуры // ()
