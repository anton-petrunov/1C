
&НаКлиенте
Процедура РаботаСМассивом(Команда)
	
	//Как создать массив
	МассивСотрудников = Новый Массив;
	
	//Как добавить в массив элементы
	МассивСотрудников.Добавить("Иванов");//0
	МассивСотрудников.Добавить("Петров");//1
	МассивСотрудников.Добавить("Викторов");//2
	МассивСотрудников.Добавить("Романов");//3
		
	//Как получить количество элементов в массиве
	Количество = МассивСотрудников.Количество();//4
	
	//Как найти значение в массиве                 
	ИндексИванова = МассивСотрудников.Найти("Иванов");//0
	ИндексТретьякова = МассивСотрудников.Найти("Третьяков");//Неопределено
	
	//Как получить значение массива (2 способа)
	//Способ № 1 - квадратные скобки
	Петров = МассивСотрудников[2];//"Викторов"
	//Способ № 2 - метод Получить()
	Петров = МассивСотрудников.Получить(2);	  
	
	Если МассивСотрудников.Количество() < 6 Тогда
		Сообщить("В массиве нет элемента с таким индексом");
	Иначе
		Сергеев = МассивСотрудников[5];
	КонецЕсли;
	
	//Обход всех элементов массива
	//вариант № 1 (цикл по условию)
	Индекс = 0;
	Пока Индекс <= МассивСотрудников.ВГраница() Цикл
		Сообщить(МассивСотрудников[Индекс]);
		Индекс = Индекс + 1;	
	КонецЦикла;
	
	//вариант № 2 (цикл по счетчику)
	Для Счетчик=0 По МассивСотрудников.ВГраница() Цикл
		Сообщить(МассивСотрудников[Счетчик]);
	КонецЦикла;
	
	//вариант № 3 (цикл по коллекции)
	Для каждого ТекЗначение Из МассивСотрудников Цикл
		Сообщить(ТекЗначение);	
	КонецЦикла;
	
	//Как удалить элемент массива
	ФамилияПетров = МассивСотрудников.Найти("Петров");
	Если ФамилияПетров <> Неопределено Тогда
		МассивСотрудников.Удалить(ФамилияПетров);	
	КонецЕсли;
	
	МассивЧисел = Новый Массив;
	МассивЧисел.Добавить(10);//0
	МассивЧисел.Добавить(8);//1
	МассивЧисел.Добавить(4);//2
	МассивЧисел.Добавить(15);//3
	
	//удалить числа меньше 10
	МассивКУдалению = Новый Массив;
	Для каждого ТекЧисло Из МассивЧисел Цикл
		Если ТекЧисло < 10 Тогда
       		МассивКУдалению.Добавить(ТекЧисло);
		КонецЕсли;                    
	КонецЦикла;      
	
	Для каждого ТекЧисло Из МассивКУдалению Цикл
		Индекс = МассивЧисел.Найти(ТекЧисло);//индекс удаляемого элемента в исходном массиве
		МассивЧисел.Удалить(Индекс);
	КонецЦикла;
	
	//Как очистить массив
	МассивСотрудников.Очистить();
	
	//типичные ошибки
	СтрокаСДанными = "Ручка шариковая;Запад;11";
	ЧастиСтроки = СтрРазделить(СтрокаСДанными, ";");//Массив с 4-мя элементами
	
	Если ЧастиСтроки.Количество() >= 4 Тогда
		НазваниеТовара	= ЧастиСтроки[0];
		СкладПоставщика	= ЧастиСтроки[1];
		Количество		= ЧастиСтроки[2];
		ЕдИзм			= ЧастиСтроки.Получить(3);
	Иначе
		Сообщить("Некорректная строка с данными");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаботаСоСтруктурой(Команда)
	
	//Как создать структуру (3 способа)
	//способ 1
	ДанныеСотрудника = Новый Структура;
	
	//способ 2
	//ДанныеСотрудника = Новый Структура("ФИО,ДатаРождения,АдресПрописки,НомерПаспорта");
	
	//способ 3
	//ДанныеСотрудника = Новый Структура("ФИО,ДатаРождения,АдресПрописки,НомерПаспорта", "Иванов", '19910811', "г. Минск", "12141"); 
		
	//Как вставить элемент в структуру
	ДанныеСотрудника.Вставить("ФИО", "Иванов");
	ДанныеСотрудника.Вставить("ДатаРождения", '19910810');
	ДанныеСотрудника.Вставить("АдресПрописки", "г. Минск, ул. Солтыса, 14");
	ДанныеСотрудника.Вставить("НомерПаспорта", "МС456464");

	//Как получить количество элементов в структуре
    КоличествоЭлементов = ДанныеСотрудника.Количество();
	
	//Как найти значение в структуре
	РезультатПоиска = Неопределено;
	СвойствоНайдено = ДанныеСотрудника.Свойство("ФИО", РезультатПоиска);//Истина	
	СвойствоНайдено = ДанныеСотрудника.Свойство("Школа", РезультатПоиска);//Ложь	

	//Как получить значение структуры (3 способа)
	//способ № 1
	ДатаРождения = ДанныеСотрудника["ДатаРождения"]; 
	Адрес = ДанныеСотрудника["АдресПрописки"];
	
	//способ № 2
	ДатаРождения = ДанныеСотрудника.ДатаРождения;
	Адрес = ДанныеСотрудника.АдресПрописки;
	
	//способ № 3
	ДатаРождения = '00010101';
	ДанныеСотрудника.Свойство("ДатаРождения", ДатаРождения); 
	
	МассивДетей = Новый Массив;
	МассивДетей.Добавить(Новый Структура("ФИО, Возраст", "Иванова", 14));
	МассивДетей.Добавить(Новый Структура("ФИО, Возраст", "Иванов", 7));
	
	ДанныеСотрудника.Вставить("Дети", МассивДетей);
	
	//Обход всех элементов структуры
	Для каждого ЭлементСтруктуры Из ДанныеСотрудника Цикл
		
		Если ЭлементСтруктуры.Ключ = "Дети" Тогда
			СтрокаДети = "";
			Для каждого Ребенок Из ЭлементСтруктуры.Значение Цикл
				СтрокаДети = СтрокаДети + Ребенок.ФИО + "(" + Ребенок.Возраст + "),"; 
			КонецЦикла;
			
			Сообщить(ЭлементСтруктуры.Ключ + ": " + СтрокаДети);
			
		Иначе
			Сообщить(ЭлементСтруктуры.Ключ + ": " + ЭлементСтруктуры.Значение);
		КонецЕсли;

	КонецЦикла;
	
	//Как удалить элемент структуры
    ДанныеСотрудника.Удалить("Дети");
	
	ДанныеСотрудника.Вставить("Работа");
	
	ДанныеСотрудника["Работа"] = "ООО ""Пик""";
	ДанныеСотрудника.Работа = "ООО ""Пик""";
	
	//Как очистить структуру     
	ДанныеСотрудника.Очистить(); 
	
	//ДанныеСотрудника.ДатаНачалаРаботы = '20200101';
	
КонецПроцедуры

&НаКлиенте
Процедура РаботаССоответствием(Команда)
	
	//Как создать соответствие
	СоответствиеРазмеров = Новый Соответствие;
	
	//Как вставить элемент в соответствие
	СоответствиеРазмеров.Вставить(36, "XS");
	СоответствиеРазмеров.Вставить(38, "S");
	СоответствиеРазмеров.Вставить(40, "M");
	СоответствиеРазмеров.Вставить(42, "L");
	СоответствиеРазмеров.Вставить(44, "XL");
	СоответствиеРазмеров.Вставить(47, "XXL");
	
	//Как получить количество элементов в  соответствии
	Количество = СоответствиеРазмеров.Количество();
	
	//Как найти значение в соответствии
	РазмерМ = СоответствиеРазмеров.Получить(40);//M
	РазмерXXL = СоответствиеРазмеров.Получить(47);//XXL
	
	//Как получить значение соответствия (2 способа)
	//способ 1
	РазмерL = СоответствиеРазмеров[42];
	
	//способ 2                         
	РазмерL = СоответствиеРазмеров.Получить(42);
	Если РазмерL <> Неопределено Тогда
		Сообщить(РазмерL);
	Иначе
		Сообщить("Размер отсутствует!");
	КонецЕсли;
	
	//Обход всех элементов соответствия
	Для каждого ЭлементСоответствия Из СоответствиеРазмеров Цикл
		Сообщить("" + ЭлементСоответствия.Ключ + " - " + ЭлементСоответствия.Значение);
	КонецЦикла;
	
	//Как удалить элемент соответствия
	СоответствиеРазмеров.Удалить(47);	
	
	//Как очистить соответствие 
	СоответствиеРазмеров.Очистить();
	
	
	//какую коллекцию выбрать
	МассивДат = Новый Массив;
	ТекДата = НачалоМесяца(ТекущаяДата());
	КонДата = КонецМесяца(ТекущаяДата());
	
	Пока ТекДата <= КонДата Цикл
		МассивДат.Добавить(ТекДата); 
		ТекДата = ТекДата + 86400;
	КонецЦикла;  
	
	СтруктураДаты = Новый Структура;     
	Счетчик = 1;
	Пока ТекДата <= КонДата Цикл
		СтруктураДаты.Вставить("Дата_" + Счетчик, ТекДата); 
		ТекДата = ТекДата + 86400;                         
		Счетчик = Счетчик + 1;
	КонецЦикла;  
	
	//организация, расчетныйсчет, остаток
	ДанныеОбОстатках = Новый Структура;
	ДанныеОбОстатках.Вставить("Организация", "ООО ""Рога и Копыта""");
	ДанныеОбОстатках.Вставить("РасчетныйСчет", "BY2141412421414214");
	ДанныеОбОстатках.Вставить("Остаток", 100000);
	
	Сообщить(ДанныеОбОстатках.Остаток);
		
КонецПроцедуры

&НаКлиенте
Процедура РаботаСоСпискомЗначений(Команда)
	
	//Как создать список значений
	ДниНедели = Новый СписокЗначений;
	
	//Как добавить элементы в список значений
	ДниНедели.Добавить("Пн", "Понедельник", Истина, БиблиотекаКартинок.ВидРасчета); 
	ДниНедели.Добавить("Вт", "Вторник", Истина, БиблиотекаКартинок.ВидРасчета); 
	ДниНедели.Добавить("Ср", "Среда", Истина, БиблиотекаКартинок.ВидРасчета); 
	ДниНедели.Добавить("Чт", "Четверг", Истина, БиблиотекаКартинок.ВидРасчета); 
	ДниНедели.Добавить("Пт", "Пятница", Истина, БиблиотекаКартинок.ВидРасчета); 
	ДниНедели.Добавить("Сб", "Суббота", Истина, БиблиотекаКартинок.ВидРасчета); 
	ДниНедели.Добавить("Вс", "Воскресенье", Истина, БиблиотекаКартинок.ВидРасчета); 
	
	//Как получить количество элементов в списке значений
	Количество = ДниНедели.Количество();
	
	//Как найти значение в списке значений
	//способ № 1 (поиск по значению)
	Среда = ДниНедели.НайтиПоЗначению("Ср");//ЭлементСпискаЗначений
	Сообщить(Среда.Представление);	
	
	//способ № 2 (поиск по индексу)
	Среда = ДниНедели.НайтиПоИдентификатору(2);
	Если Среда = Неопределено Тогда
		Сообщить("Среды нет в списке");
	КонецЕсли;
	
	//Как получить значение из списка значений  (2 способа)
	//способ № 1
	Четверг = ДниНедели[3];
	
	//способ № 2           
	Четверг = ДниНедели.Получить(3);
	
	//Обход всех элементов списка значений
	Для каждого День Из ДниНедели Цикл
		Сообщить(День.Представление);
	КонецЦикла;

	//Показать список значений пользователю для выбора  одного значения
    ВыбранноеЗначение = ДниНедели.ВыбратьЭлемент();
	Если ВыбранноеЗначение = Неопределено Тогда
		//пользователь отказался от выбора
		Сообщить("Вы ничего не выбрали...Очень жаль");
	Иначе
		Сообщить("Вы выбрали:" + ВыбранноеЗначение.Представление);
	КонецЕсли;
	
	//Показать список значений пользователю для отметки  нескольких значений
	ПользовательВыбралДни = ДниНедели.ОтметитьЭлементы("Выберите дни удалёнки");
	Если ПользовательВыбралДни = Истина Тогда
		Сообщить("Вы будете работать удаленно в следующие дни:");
		Для каждого День Из ДниНедели Цикл
			Если День.Пометка = Истина Тогда
				Сообщить(День.Представление);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Сообщить("Вы ничего не выбрали...Очень жаль");
	КонецЕсли;
	
	//Как удалить элемент списка значений
	//способ № 1 (по индексу)
	ДниНедели.Удалить(6);
	
	//способ № 2 (по значению)
	Воскресенье = ДниНедели.НайтиПоЗначению("Вс");
	Если Воскресенье <> Неопределено Тогда
		ДниНедели.Удалить(Воскресенье);
	КонецЕсли;
	
	//Как очистить список значений
	//ДниНедели.Очистить();	
		
КонецПроцедуры

&НаКлиенте
Процедура РаботаСТаблицейЗначений(Команда)
	
	РаботаСТаблицейЗначенийНаСервере();
	
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьТаблицуЗначений(ТаблицаТовары)
	
	НоваяСтрока = ТаблицаТовары.Добавить();
	НоваяСтрока.Номенклатура = "Слива ""Овация"", Не годен";
	НоваяСтрока.Склад = "Торговый зал";
	НоваяСтрока.ВНаличии = 2;
	НоваяСтрока.ВРезерве = 0;
	НоваяСтрока.Остаток = 2;
	
	НоваяСтрока = ТаблицаТовары.Добавить();
	НоваяСтрока.Номенклатура = "Вентилятор JIPONIC, напольный";
	НоваяСтрока.Склад = "Магазин ""Бытовая техника""";
	НоваяСтрока.ВНаличии = 3;
	НоваяСтрока.ВРезерве = 0;
	НоваяСтрока.Остаток = 3;

	НоваяСтрока = ТаблицаТовары.Добавить();
	НоваяСтрока.Номенклатура = "Капуста белокачанная";
	НоваяСтрока.Склад = "Магазин ""Продукты""";
	НоваяСтрока.ВНаличии = 2000;
	НоваяСтрока.ВРезерве = 30;
	НоваяСтрока.Остаток = 2030;

	НоваяСтрока = ТаблицаТовары.Добавить();
	НоваяСтрока.Номенклатура = "Капуста белокачанная";
	НоваяСтрока.Склад = "Торговый зал";
	НоваяСтрока.ВНаличии = 949.140;
	НоваяСтрока.ВРезерве = 49.780;
	НоваяСтрока.Остаток = 998.92;

	НоваяСтрока = ТаблицаТовары.Добавить();
	НоваяСтрока.Номенклатура = "Капуста белокачанная";
	НоваяСтрока.Склад = "Оптовый склад";
	НоваяСтрока.ВНаличии = 980.1;
	НоваяСтрока.ВРезерве = 0;
	НоваяСтрока.Остаток = 980.1;

	НоваяСтрока = ТаблицаТовары.Добавить();
	НоваяСтрока.Номенклатура = "Хлеб ""Водар""";
	НоваяСтрока.Склад = "Магазин ""Продукты""";
	НоваяСтрока.ВНаличии = 20;
	НоваяСтрока.ВРезерве = 0;
	НоваяСтрока.Остаток = 20;

	НоваяСтрока = ТаблицаТовары.Добавить();
	НоваяСтрока.Номенклатура = "Хлеб ""Балтийский"" нарезной";
	НоваяСтрока.Склад = "Магазин ""Продукты""";
	НоваяСтрока.ВНаличии = 20;
	НоваяСтрока.ВРезерве = 0;
	НоваяСтрока.Остаток = 20;

	НоваяСтрока = ТаблицаТовары.Добавить();
	НоваяСтрока.Номенклатура = "Кондиционер для белья";
	НоваяСтрока.Склад = "Оптовый склад";
	НоваяСтрока.ВНаличии = 4;
	НоваяСтрока.ВРезерве = 0;
	НоваяСтрока.Остаток = 4;

	НоваяСтрока = ТаблицаТовары.Добавить();
	НоваяСтрока.Номенклатура = "Порошок стиральный";
	НоваяСтрока.Склад = "Оптовый склад";
	НоваяСтрока.ВНаличии = 16;
	НоваяСтрока.ВРезерве = 0;
	НоваяСтрока.Остаток = 16;

	НоваяСтрока = ТаблицаТовары.Добавить();
	НоваяСтрока.Номенклатура = "Стол кухонный ""Стандарт Плюс""";
	НоваяСтрока.Склад = "Мебельный склад";
	НоваяСтрока.ВНаличии = 10;
	НоваяСтрока.ВРезерве = 0;
	НоваяСтрока.Остаток = 10;

	НоваяСтрока = ТаблицаТовары.Добавить();
	НоваяСтрока.Номенклатура = "Стул ""Премьер""";
	НоваяСтрока.Склад = "Мебельный склад";
	НоваяСтрока.ВНаличии = 7;
	НоваяСтрока.ВРезерве = 0;
	НоваяСтрока.Остаток = 7;
	
КонецПроцедуры

&НаСервере
Процедура РаботаСТаблицейЗначенийНаСервере()

	//Как создать таблицу значений
	ТаблицаТовары = Новый ТаблицаЗначений;
	
	//Как добавить колонки в таблицу значений
	ТаблицаТовары.Колонки.Добавить("Номенклатура");
	ТаблицаТовары.Колонки.Добавить("Склад");
	ТаблицаТовары.Колонки.Добавить("ВНаличии");
	ТаблицаТовары.Колонки.Добавить("ВРезерве");
	ТаблицаТовары.Колонки.Добавить("Остаток");
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(300));
	
	//Как добавить элементы (строки) в таблицу значений
    ЗаполнитьТаблицуЗначений(ТаблицаТовары);

	//Как получить количество элементов в таблице значений
	КоличествоСтрок = ТаблицаТовары.Количество();//11
	
	//Как найти один элемент в таблице значений
	Хлеб = ТаблицаТовары.Найти("Хлеб ""Водар""", "Номенклатура"); 
	Если Хлеб = Неопределено Тогда
		//не нашли
		Сообщить("Товар Хлеб не найден");
	Иначе                                    
		Сообщить("Остаток:" + Хлеб.Остаток); 
	КонецЕсли;

	КокаКола = ТаблицаТовары.Найти("CocaCola", "Номенклатура");
	Если КокаКола = Неопределено Тогда
		//не нашли
		Сообщить("Товар CocaCola не найден");
	Иначе                                    
		Сообщить("Остаток:" + КокаКола.Остаток); 
	КонецЕсли;
	
	//Как найти все элементы таблицы значений, которые удовлетворяют условию поиска
	СтруктураПоиска = Новый Структура("Номенклатура", "Капуста белокачанная");
	МассивСтрок = ТаблицаТовары.НайтиСтроки(СтруктураПоиска);
	Если МассивСтрок.Количество() > 0 Тогда
		//строки найдены
		Для каждого СтрокаОстатка Из МассивСтрок Цикл
			Сообщить(СтрокаОстатка.Склад + ": " + СтрокаОстатка.Остаток);
		КонецЦикла;
	Иначе
		Сообщить("Товар Капуста белокачанная не найден в таблице");
	КонецЕсли;	
	
	//поиск по комбинации Номенклатура+Склад
	СтруктураПоиска = Новый Структура("Номенклатура, Склад", "Капуста белокачанная", "Торговый зал");	
	НайденныеСтроки = ТаблицаТовары.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки.Количество() > 0 Тогда
      	Сообщить(НайденныеСтроки[0].Склад + ": " + НайденныеСтроки[0].Остаток);
	Иначе
		Сообщить("Товар Капуста белокачанная на складе Торговый зал не найден в таблице");	
	КонецЕсли;
	
	//Как создать копию таблицы значений (с данными)
	ПолнаяКопия = ТаблицаТовары.Скопировать();
	
	КопияТолькоСклады = ТаблицаТовары.Скопировать(, "Склад, ВНаличии, ВРезерве, Остаток");

	КопияОстаткиКапуста = ТаблицаТовары.Скопировать(МассивСтрок);
	
	СтруктураОтбора = Новый Структура("Номенклатура", "Капуста белокачанная");
	КопияОстаткиКапуста = ТаблицаТовары.Скопировать(СтруктураОтбора);
	
	//Как создать копию таблицы значений (без данных)
	ПустаяКопия = ТаблицаТовары.СкопироватьКолонки();	
	
	//Как удалить элемент таблицы значений
    //шаг 1. поиск строки
	СтрокаКУдалению = ТаблицаТовары.Найти("Кондиционер для белья", "Номенклатура");
	
	//шаг 2. проверка (нашли/не нашли)
	Если СтрокаКУдалению <> Неопределено Тогда
		
		//шаг 3. Удаление строки из таблицы
		ТаблицаТовары.Удалить(СтрокаКУдалению);
		
	КонецЕсли;  
	
	СтруктураПоиска = Новый Структура("Номенклатура", "Капуста белокачанная");
	МассивСтрокКУдалению = ТаблицаТовары.НайтиСтроки(СтруктураПоиска);
	Для каждого СтрокаКУдалению Из МассивСтрокКУдалению Цикл
		ТаблицаТовары.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
	//Как очистить таблицу значений
	//ТаблицаТовары.Очистить();
	
	//Как выполнить сортировку в таблице значений
	ТаблицаТовары.Сортировать("Остаток Убыв");
	
	//Как получить итог по колонке числового типа
	ОстатокВсего = ТаблицаТовары.Итог("Остаток");
	Сообщить("Общий остаток всех товаров: " + ОстатокВсего);	
	
	//свертка таблицы
	//ТаблицаТовары.Свернуть("Склад", "ВРезерве,ВНаличии,Остаток");	
	
	//Обход всех элементов (строк) таблицы значений
	Для каждого СтрокаТаблицы ИЗ ТаблицаТовары Цикл
		Сообщить(СтрокаТаблицы.Номенклатура + ", " + СтрокаТаблицы.Склад + "," + СтрокаТаблицы.Остаток);			
	КонецЦикла;
	
	Колонки = ТаблицаТовары.Колонки;		

	//обход таблицы с произвольным набором колонок
	Для каждого Строка Из ТаблицаТовары Цикл
		Для каждого ТекКолонка Из Колонки Цикл
			ИмяКолонки = ТекКолонка.Имя;
			Сообщить(ИмяКолонки + ":" + Строка[ИмяКолонки])
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РаботаСДеревомЗначений(Команда)
	
	РаботаСДеревомЗначенийНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоЗначений(ДеревоТоваров) 
	
	СтрокаСклад = ДеревоТоваров.Строки.Добавить();
	СтрокаСклад.Склад = "Арендованный склад Вега-Транс";
	СтрокаСклад.ВНаличии = 34; 
	СтрокаСклад.ВРезерве = 0;
	СтрокаСклад.Остаток = 34; 
	
	СтрокаТовар = СтрокаСклад.Строки.Добавить();
	СтрокаТовар.Склад = "Арендованный склад Вега-Транс";
	СтрокаТовар.Номенклатура = "Вентилятор BINATONE ALPINE 160вт, напольный, оконный";
	СтрокаТовар.ВНаличии = 6; 
	СтрокаТовар.ВРезерве = 0;
	СтрокаТовар.Остаток = 6; 

	СтрокаТовар = СтрокаСклад.Строки.Добавить();
	СтрокаТовар.Склад = "Арендованный склад Вега-Транс";
	СтрокаТовар.Номенклатура = "Вентилятор оконный, модель 902";
	СтрокаТовар.ВНаличии = 3; 
	СтрокаТовар.ВРезерве = 0;
	СтрокаТовар.Остаток = 3; 

	СтрокаТовар = СтрокаСклад.Строки.Добавить();
	СтрокаТовар.Склад = "Арендованный склад Вега-Транс";
	СтрокаТовар.Номенклатура = "Вентилятор JIPONIC, напольный";
	СтрокаТовар.ВНаличии = 1; 
	СтрокаТовар.ВРезерве = 0;
	СтрокаТовар.Остаток = 1; 

	СтрокаТовар = СтрокаСклад.Строки.Добавить();
	СтрокаТовар.Склад = "Арендованный склад Вега-Транс";
	СтрокаТовар.Номенклатура = "S-545454 Samsung двухкамерный, авторазморозка РОССИЯ";
	СтрокаТовар.ВНаличии = 1; 
	СтрокаТовар.ВРезерве = 0;
	СтрокаТовар.Остаток = 1; 

	СтрокаТовар = СтрокаСклад.Строки.Добавить();
	СтрокаТовар.Склад = "Арендованный склад Вега-Транс";
	СтрокаТовар.Номенклатура = "S-3243234 Samsung однокамерный, авторазморозка РОССИЯ";
	СтрокаТовар.ВНаличии = 18; 
	СтрокаТовар.ВРезерве = 0;
	СтрокаТовар.Остаток = 18; 

	СтрокаТовар = СтрокаСклад.Строки.Добавить();
	СтрокаТовар.Склад = "Арендованный склад Вега-Транс";
	СтрокаТовар.Номенклатура = "Босоножки женские";
	СтрокаТовар.ВНаличии = 3; 
	СтрокаТовар.ВРезерве = 0;
	СтрокаТовар.Остаток = 3; 

	СтрокаТовар2 = СтрокаТовар.Строки.Добавить();
	СтрокаТовар2.Склад = "Арендованный склад Вега-Транс";
	СтрокаТовар2.Номенклатура = "Босоножки женские (черные)";
	СтрокаТовар2.ВНаличии = 1; 
	СтрокаТовар2.ВРезерве = 0;
	СтрокаТовар2.Остаток = 1; 

	СтрокаТовар2 = СтрокаТовар.Строки.Добавить();
	СтрокаТовар2.Склад = "Арендованный склад Вега-Транс";
	СтрокаТовар2.Номенклатура = "Босоножки женские (белые)";
	СтрокаТовар2.ВНаличии = 1; 
	СтрокаТовар2.ВРезерве = 0;
	СтрокаТовар2.Остаток = 1; 
	
	СтрокаТовар = СтрокаСклад.Строки.Добавить();
	СтрокаТовар.Склад = "Арендованный склад Вега-Транс";
	СтрокаТовар.Номенклатура = "Ботинки женские демисезонные";
	СтрокаТовар.ВНаличии = 2; 
	СтрокаТовар.ВРезерве = 0;
	СтрокаТовар.Остаток = 2; 
	
	СтрокаСклад = ДеревоТоваров.Строки.Добавить();
	СтрокаСклад.Склад = "Ларек ""Розница""";
	СтрокаСклад.ВНаличии = 171; 
	СтрокаСклад.ВРезерве = 0;
	СтрокаСклад.Остаток = 171; 
	
	СтрокаТовар = СтрокаСклад.Строки.Добавить();
	СтрокаТовар.Склад = "Ларек ""Розница""";
	СтрокаТовар.Номенклатура = "Мука гречневая, 900 г.";
	СтрокаТовар.ВНаличии = 70; 
	СтрокаТовар.ВРезерве = 0;
	СтрокаТовар.Остаток = 170; 

	СтрокаТовар = СтрокаСклад.Строки.Добавить();
	СтрокаТовар.Склад = "Ларек ""Розница""";
	СтрокаТовар.Номенклатура = "Кофеварка BRAUN KF22R";
	СтрокаТовар.ВНаличии = 1; 
	СтрокаТовар.ВРезерве = 0;
	СтрокаТовар.Остаток = 1; 
	
	СтрокаСклад = ДеревоТоваров.Строки.Добавить();
	СтрокаСклад.Склад = "Магазин ""Бытовая техника""";
	СтрокаСклад.ВНаличии = 159; 
	СтрокаСклад.ВРезерве = 2;
	СтрокаСклад.Остаток = 177; 
	
	СтрокаТовар = СтрокаСклад.Строки.Добавить();
	СтрокаТовар.Склад = "Магазин ""Бытовая техника""";
	СтрокаТовар.Номенклатура = "Комбайн кухонный BINATONE FP 67";
	СтрокаТовар.ВНаличии = 9; 
	СтрокаТовар.ВРезерве = 0;
	СтрокаТовар.Остаток = 9; 

	СтрокаТовар = СтрокаСклад.Строки.Добавить();
	СтрокаТовар.Склад = "Магазин ""Бытовая техника""";
	СтрокаТовар.Номенклатура = "Мясорубка MOULINEX  A 15";
	СтрокаТовар.ВНаличии = 20; 
	СтрокаТовар.ВРезерве = 1;
	СтрокаТовар.Остаток = 19; 
	
КонецПроцедуры
	
&НаСервере
Процедура РаботаСДеревомЗначенийНаСервере()

	//Как создать дерево значений
	ДеревоТоваров = Новый ДеревоЗначений;
	
	//Как добавить колонки в дерево значений
	ДеревоТоваров.Колонки.Добавить("Склад");
	ДеревоТоваров.Колонки.Добавить("Номенклатура");
	ДеревоТоваров.Колонки.Добавить("ВНаличии");
	ДеревоТоваров.Колонки.Добавить("ВРезерве");
	ДеревоТоваров.Колонки.Добавить("Остаток");
	
	//Как добавить элементы (строки) в дерево значений
	ЗаполнитьДеревоЗначений(ДеревоТоваров);
	
	//Как получить количество элементов в дереве значений
	КоличествоСтрокУровня1 = ДеревоТоваров.Строки.Количество();
	
	КоличествоСтрокУровня2 = 0;
	Для каждого СтрокаУровня1 Из ДеревоТоваров.Строки Цикл
		КоличествоСтрокУровня2 = КоличествоСтрокУровня2 + СтрокаУровня1.Строки.Количество();
	КонецЦикла;
	//Сообщить("Строк уровня1: " + КоличествоСтрокУровня1);
	//Сообщить("Строк уровня2: " + КоличествоСтрокУровня2);
	
	//Как найти один элемент в дереве значений     
	СтрокаДерева = ДеревоТоваров.Строки.Найти("Вентилятор JIPONIC, напольный", "Номенклатура", Истина);
	Если СтрокаДерева = Неопределено Тогда
		//Сообщить("Вентилятор не найден");
	Иначе
		//Сообщить(СтрокаДерева.Остаток);
	КонецЕсли;       
	
	//Как найти все элементы дерева значений, которые удовлетворяют условию поиска
	СтруктураОтбора = Новый Структура("Склад", "Арендованный склад Вега-Транс");
	СтрокиПоСкладу = ДеревоТоваров.Строки.НайтиСтроки(СтруктураОтбора, Истина);
	
	//Как создать копию дерева значений (с данными)
	КопияДерева = ДеревоТоваров.Скопировать();
	
	//Как удалить элемент дерева значений
	//удаление строки нижнего уровня
	СтрокаКУдалению = ДеревоТоваров.Строки.Найти("Мука гречневая, 900 г.", "Номенклатура", Истина);
	Если СтрокаКУдалению <> Неопределено Тогда
		Если СтрокаКУдалению.Родитель = Неопределено Тогда
			ДеревоТоваров.Строки.Удалить(СтрокаКУдалению);
		Иначе
			СтрокаКУдалению.Родитель.Строки.Удалить(СтрокаКУдалению);
		КонецЕсли;
	КонецЕсли;

	СтрокаСклада = ДеревоТоваров.Строки.Найти("Ларек ""Розница""", "Склад");
	Если СтрокаСклада <> Неопределено Тогда
		Если СтрокаСклада.Родитель = Неопределено Тогда
			ДеревоТоваров.Строки.Удалить(СтрокаСклада);
		Иначе
			СтрокаСклада.Родитель.Строки.Удалить(СтрокаСклада);
		КонецЕсли;
	КонецЕсли;
		
	//Как очистить дерево значений
	//ДеревоТоваров.Строки.Очистить();
	
	//Как выполнить сортировку в дереве значений
	ДеревоТоваров.Строки.Сортировать("Остаток Убыв", Истина);	
	
	//Обход всех элементов дерева значений
	//Для каждого СтрокаУровня1 Из ДеревоТоваров.Строки Цикл
	//	
	//	Сообщить(СтрокаУровня1.Склад + ": " + СтрокаУровня1.Остаток);
	//	
	//	Для каждого СтрокаУровня2 Из СтрокаУровня1.Строки Цикл
	//		Сообщить("--" + СтрокаУровня2.Номенклатура + ": " + СтрокаУровня2.Остаток);			
	//	КонецЦикла;
	//	
	//КонецЦикла;
	
	ОбходДереваРекурсивно(ДеревоТоваров);
	
КонецПроцедуры 

Процедура ОбходДереваРекурсивно(Дерево)

	Если Дерево.Строки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаТекУровня ИЗ Дерево.Строки Цикл
		
		ТекстСообщения = "Уровень: " + СтрокаТекУровня.Уровень() + "Склад: " 
						+ СтрокаТекУровня.Склад + "Номенклатура: " + СтрокаТекУровня.Номенклатура 
						+ "Остаток: " + СтрокаТекУровня.Остаток;
		Сообщить(ТекстСообщения);
		
		ОбходДереваРекурсивно(СтрокаТекУровня);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТестРекурсии(Команда)

	Сумма = 0;
	Число = 1;  
	
	ДобавитьЧислоКСумме(Сумма, Число);
	
	Сообщить(Сумма);
	
КонецПроцедуры 

Функция ДобавитьЧислоКСумме(Сумма, Число)
	
	Если Сумма = 1000 Тогда
		Возврат Сумма;
	КонецЕсли;
	
	Сумма = Сумма + Число;
	
	ДобавитьЧислоКСумме(Сумма, Число);
	
КонецФункции
	



	

